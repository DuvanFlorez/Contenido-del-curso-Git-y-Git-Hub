Git status
git status nos permite ver el estado de todos 
nuestros archivos y carpetas.

Git commit
Nos ayuda a mover archivos de unstaged a tracked. 
Esta es una ocasión especial, los archivos han sido 
guardados o actualizados en el repositorio. 
Git nos pedirá que dejemos un mensaje para 
recordar los cambios que hicimos y podemos 
usar el argumento m para escribirlo 
(git commit -m "mensaje").

Comandos para analizar cambios en GIT
git init: inicializar el repositorio
git add nombre_de_archivo.extensión: agregar el archivo al repositorio
git commit -m “Mensaje”: Agregamos los cambios para el repositorio
git add: Agregar los cambios de la carpeta en la que nos encontramos agregar todo
git status: visualizar cambios
git log nombre_de_archivos.extensión: histórico de cambios con detalles
git push: envía a otro repositorio remoto lo que estamos haciendo
git pull: traer repositorio remoto
ls: listado de carpetas en donde me encuentro. Es decir, como emplear dir en windows.
pwd: ubicación actual
mkdir: make directory nueva carpeta
touch archivo.extensión: crear archivo vacío
cat archivo.extensión: muestra el contenido del archivo
history: historial de comandos utilizados durante esa sesión
rm archivo.extensión: Eliminación de archivo
comando --help: ayuda sobre el comando
git checkout: traer cambios realizados
git rm --cached archivo.extensión: se utiliza para devolver el archivo que se tiene en ram. Cuando escribimos git add, lo devuelve a estado natural mientras está en staging.
git config --list: muestra la lista de configuración de git
git config --list --show-origin: rutas de acceso a la configuración de git
git log archivo.extensión: muestra la historia del archivo

este es una cambio en rama experimento hecha 5:27 PM 1/11/2023.

-----

cambio hecho el 5:24 PM 1/11/2023

cambio en la rama master: 5:37 PM 1/11/2023